<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0HDQ0NBwcHBw0HBwcHDQ8IDQcNFREWFhURExMY
        HSggGBolGxMTITEhJSk3Li4uFx8zODMtNygtLiv/2wBDAQoKCg0NDQ4NDQ8rGRUZKystKystNystLSsr
        KysrKysrKy0rKy0rLSsrKzcrKysrKy0rKysrKysrKysrKysrKyv/wAARCACxARwDASIAAhEBAxEB/8QA
        GgABAQEBAQEBAAAAAAAAAAAAAwQCAAEFBv/EABoQAQEBAQEBAQAAAAAAAAAAAAACAQMSExH/xAAXAQEB
        AQEAAAAAAAAAAAAAAAAAAQIE/8QAFhEBAQEAAAAAAAAAAAAAAAAAABEB/9oADAMBAAIRAxEAPwD8BMlm
        HkYeJdeY5d1mYLPNuJNMNRminm3nM8wWeaxKnnmSeSieZZ5rEqaeRJ4qp5GnkQqSeJJ4rJ4lnisSop4t
        zwXzxJPEiV8/ODWcH0c4N5wIV834O+D6nwe/BYlfK+DzeD6vwebwIV8neDG8H194MbwSLXyK4sVxfWri
        KuJCvk1xHXF9WuIq5EWvl1yHXJ9OuQq5JFr5tcx1zfQrmOuZFr5+82K5rq5iqEhUNQOoW1AblItSVLH4
        ovBbjLRIxRzxPCnm1iaeJPEj54ojGsYamTTDyMNGNM10waIdGGjFR0waeb2JPEiMzzNPNqJNEiMTzLPI
        kyaZAOcm85HmCZCCbOT35Ksh74BJ8md5LfDOwCLeQ65LqgdSogrmKua+pDcghvmG+a65DcioLgNQuuQX
        IqKoFULLwFYipKkVyqvA3gtSXILxXeJujOriS8Fp+gdY1t7zU80kaq56uGq+amEvPVMa3jGqINAI00ar
        KiTQCNPCoog8J4UQIaDxgIPAhpw04KTSBJwmYxJJQazHv47GkGNxncJrGgOsFWGoVKBrA3hqDagLDZrD
        agLT2e9BaKCg2awXoorBZr0F6ig6JuijpqbozrWJugdL00Osa27nqnnqSNU89MNWc9U89Sc9Uc9bxjVU
        aaNTxpo1plTGnjU0aeNVFMaojUsaeNEVRp41NGmjRFUGnU0aadBROknQTpZ1Aua1+jzWv1B7us7rt1jd
        B5WirWq0VaoxWhvSVoL1Qd6C9JegvQHep70t6C9FFegvSXob1FFehvSXob0aD01N00/TU3TWdaxP00O6
        S9Dusa26NU89SRqmNMNV89URqXnqiNbxjVUaadSxp41WVMaojUk6aNVFkaeNSRR41UVxp41HFHihFcUe
        aSTRZoRXNEmks0TKQU5T30DKa9AXaY2mNpnaB7VDrXlUOqUeXQb17VBugZvQXrV0C6FZvU963dAvRWL0
        F63ehvUVi9Det3ob1GhXqbppr1P01nVwF6LdJeh3WNbdGqI1LGqI0w1Vz08aljTxreM6qnTTSWdLNNMq
        4o0UkijRQiyKPFIoo8UqLIo8UiijRSotiizSObLNiLJomWkm28sFWW17S5b32Io9s7YfbO2KWrFVMVY6
        sGqoN08qxVQOugXT27BdCuuk901dBukVm6DdNXQKpGnlaG9arRVqA71PelvQXrOtYK9DukvRay26Txqa
        TxphqiNPGpp0s61jGqZ0s0mnSzrSKZo00kmizQiyKNNI5os0qLYss2jmizaotmyTaObJNqizLJlo8tvL
        BXnR77SZb32Ip23m2n9s7Yp9sdWLbYqwJViq2KsVWg1dhqnlUKrFjqoN06qDVI066FVOqh1SDytFWva0
        Vais3ob1utFeprWCvRtXo9Y1rHSaNBJZ0w086WdBOknWmTzpJoGa3NNIomizSaaJNCKpos0kmiTSosmy
        TaSaJNqLJsmWjy28sSLMtrLSZbWWqRXlvfaX272EVe2dtP7ebYQ+2xth22dsWEqx1Y6sdWgSrFVsVQ6o
        VqqFVPKoVUivaodU8qh1SD2tHWu3WN1FeVoq1qtHWo0OtHrVMazrTyDSCTSYaadbzRS3mtMlzWs0Wa1m
        qhspvKBlN5QiiaJNJspvKUVTRMtJNEyxFWU3lpMtvLWoqy2stLltZZRV7d7Te3e1FPt57T+3m2B9tnbD
        ts7aULtsbY9tjaFb2mKpjaHtoN1Q6pmqY2hXu0xuvNpjdRWt1jddus7oOrRVre6OkUdMa1Wj1jWnTpZ0
        E6WdMDZreaHNazWkL+vf0f670qGynuUH099AoymspNlNZYkVZbeWky2staRXlt5aPLayypFmW9+iP219
        CkV/R30SfR79FpFX0efRL9HfQpFO2ztp96PNtKQ+2ztg22dsqw22xti22dspC7TG0PbZ9IpNp5+j9PPQ
        E/Xm6x6efoNbo617usVqKzWj/Xtax+sqzOknQ5reainzXuUHNa9LUL6d6F6d6WhvTvQfT30UN6e+wenv
        oqHy2stN6e+ikU5b36JvT32Uin6Pfol9vfZSKvo76JfbvZSKvo76JfbvZSKfo83on9vPZSKNtnbB6eei
        kPts+xennopC+neg+neiqX089D9PPRQvp3oXp3ooTdY3WdpndQe1rG67dZ/UV5jePHIN49xzmhznOEeu
        c5MRznOVXrnOB65zgc9c4HOc4HOc4Ha8c4HPHrgePNc4HOc4HOc5B45zlHjzXORWdZc5B//Z
</value>
  </data>
</root>