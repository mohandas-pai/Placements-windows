<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>