<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mRQpWYApazIpaDMKFBmRQoMwoMzIP//Z
</value>
  </data>
</root>